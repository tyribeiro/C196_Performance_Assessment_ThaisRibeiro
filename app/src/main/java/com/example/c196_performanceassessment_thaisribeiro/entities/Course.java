package com.example.c196_performanceassessment_thaisribeiro.entities;

import android.widget.EditText;
import android.widget.Spinner;

import androidx.room.Entity;
import androidx.room.Ignore;
import androidx.room.PrimaryKey;

import com.example.c196_performanceassessment_thaisribeiro.entities.CourseInstructor;

/**
 * Represents a course in the application. This entity is stored in the 'courses' table in the database.
 */
@Entity(tableName = "courses")
public class Course {

    /** The unique ID of the course, auto-generated by the database. */
    @PrimaryKey(autoGenerate = true)
    private int courseID;

    /** The title of the course. */
    private String title;

    /** The current status of the course (e.g., In Progress, Completed, etc.). */
    private String status;

    /** Additional information about the course. */
    private String information;

    /** The start date of the course. */
    private String startDate;

    /** The end date of the course. */
    private String endDate;

    /** The ID of the term to which the course belongs. */
    private int termID;

    /** The ID of the instructor associated with the course. */
    private int instructorID;

    /**
     * Constructs a new Course with the specified ID, title, status, information, start date, end date, term ID, and instructor ID.
     *
     * @param courseID the unique ID of the course
     * @param title the title of the course
     * @param status the current status of the course
     * @param information additional information about the course
     * @param startDate the start date of the course
     * @param endDate the end date of the course
     * @param termID the ID of the term to which the course belongs
     * @param instructorID the ID of the instructor associated with the course
     */
    public Course(int courseID, String title, String status, String information, String startDate, String endDate, int termID, int instructorID) {
        this.setCourseID(courseID);
        this.setTitle(title);
        this.setStatus(status);
        this.setInformation(information);
        this.setStartDate(startDate);
        this.setEndDate(endDate);
        this.setTermID(termID);
        this.setInstructorID(instructorID);
    }

    /**
     * Constructs a new Course with the specified title, status, information, start date, end date, term ID, and instructor ID.
     * This constructor is ignored by Room database.
     *
     * @param title the title of the course
     * @param status the current status of the course
     * @param information additional information about the course
     * @param startDate the start date of the course
     * @param endDate the end date of the course
     * @param termID the ID of the term to which the course belongs
     * @param instructorID the ID of the instructor associated with the course
     */
    @Ignore
    public Course(String title, String status, String information, String startDate, String endDate, int termID, int instructorID) {
        this.setTitle(title);
        this.setStatus(status);
        this.setInformation(information);
        this.setStartDate(startDate);
        this.setEndDate(endDate);
        this.setTermID(termID);
        this.setInstructorID(instructorID);
    }

    /**
     * Sets the unique ID of the course.
     *
     * @param courseID the unique ID of the course
     */
    public void setCourseID(int courseID) {
        this.courseID = courseID;
    }

    /**
     * Sets the title of the course.
     *
     * @param title the title of the course
     */
    public void setTitle(String title) {
        this.title = title;
    }

    /**
     * Sets the current status of the course.
     *
     * @param status the current status of the course
     */
    public void setStatus(String status) {
        this.status = status;
    }

    /**
     * Sets additional information about the course.
     *
     * @param information additional information about the course
     */
    public void setInformation(String information) {
        this.information = information;
    }

    /**
     * Sets the start date of the course.
     *
     * @param startDate the start date of the course
     */
    public void setStartDate(String startDate) {
        this.startDate = startDate;
    }

    /**
     * Sets the end date of the course.
     *
     * @param endDate the end date of the course
     */
    public void setEndDate(String endDate) {
        this.endDate = endDate;
    }

    /**
     * Sets the ID of the term to which the course belongs.
     *
     * @param termID the ID of the term
     */
    public void setTermID(int termID) {
        this.termID = termID;
    }

    /**
     * Sets the ID of the instructor associated with the course.
     *
     * @param courseInstructorID the ID of the instructor
     */
    public void setInstructorID(int courseInstructorID) {
        this.instructorID = courseInstructorID;
    }

    /**
     * Returns the unique ID of the course.
     *
     * @return the unique ID of the course
     */
    public int getCourseID() {
        return this.courseID;
    }

    /**
     * Returns the ID of the term to which the course belongs.
     *
     * @return the ID of the term
     */
    public int getTermID() {
        return this.termID;
    }

    /**
     * Returns the ID of the instructor associated with the course.
     *
     * @return the ID of the instructor
     */
    public int getInstructorID() {
        return this.instructorID;
    }

    /**
     * Returns the title of the course.
     *
     * @return the title of the course
     */
    public String getTitle() {
        return this.title;
    }

    /**
     * Returns the current status of the course.
     *
     * @return the current status of the course
     */
    public String getStatus() {
        return this.status;
    }

    /**
     * Returns additional information about the course.
     *
     * @return additional information about the course
     */
    public String getInformation() {
        return this.information;
    }

    /**
     * Returns the start date of the course.
     *
     * @return the start date of the course
     */
    public String getStartDate() {
        return this.startDate;
    }

    /**
     * Returns the end date of the course.
     *
     * @return the end date of the course
     */
    public String getEndDate() {
        return this.endDate;
    }

    /**
     * Updates the fields of the course based on the input provided through UI elements.
     *
     * @param className the EditText containing the title of the course
     * @param classInfo the EditText containing additional information about the course
     * @param classStatus the Spinner containing the selected status of the course
     * @param selectInstructor the Spinner containing the selected instructor for the course
     * @param startDate the EditText containing the start date of the course
     * @param endDate the EditText containing the end date of the course
     */
    public void updateFields_M(EditText className, EditText classInfo, Spinner classStatus, Spinner selectInstructor,
                               EditText startDate, EditText endDate) {
        this.setTitle(className.getText().toString().trim());
        this.setInformation(classInfo.getText().toString().trim());
        this.setStatus(classStatus.getSelectedItem().toString());
        this.setInstructorID(((CourseInstructor) selectInstructor.getSelectedItem()).getInstructorID());
        this.setStartDate(startDate.getText().toString());
        this.setEndDate(endDate.getText().toString());
    }
}
